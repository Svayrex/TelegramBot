import telebot
from telebot import types
bot = telebot.TeleBot('6236952582:AAEPeDuGFV_eX9kMGWOGzz21xtFAjuMo9iE')
@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('D:\–ù–æ–≤–∞—è –ø–∞–ø–∫–∞\–ø–∏—Ç–æ–Ω\–¢–ì –±–æ—Ç\–¢–ì –ë–æ—Ç\Z.jpg', 'rb')
    bot.send_sticker(message.chat.id, sti)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìã")
    item2 = types.KeyboardButton("üíé –û –¥–∞, —è —Ö–æ—á—É –±—ã—Ç—å –≤ —Ç–æ–ø–µ! üíé")
    item3 = types.KeyboardButton("üíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ üíª")
    markup.add(item1, item2, item3)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–æ—Ä–≤–∞—Ç—å—Å—è –≤ —Ö–∏–ø-—Ö–æ–ø!".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üíé –û –¥–∞, —è —Ö–æ—á—É –±—ã—Ç—å –≤ —Ç–æ–ø–µ! üíé':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("üí∏ –ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä—É—Ç–æ–π –±–∏—Ç! üí∏", callback_data='1')
            item2 = types.InlineKeyboardButton("‚ö° –°–¥–µ–ª–∞–π—Ç–µ —Ç–µ–∫—Å—Ç! ‚ö°", callback_data='2')
            item3 = types.InlineKeyboardButton("üéß –°–≤–µ–¥–∏—Ç–µ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ! üéß", callback_data='3')
            item4 = types.InlineKeyboardButton("üåü –ù–∞–ø–∏—à–∏—Ç–µ —Ç—Ä–µ–∫! üåü", callback_data='4')
            markup.add(item1, item2, item3, item4)
            bot.send_message(message.chat.id, '–ß—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ?', reply_markup=markup)
        elif message.text == "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìã":
            bot.send_message(message.chat.id, " üìÉ –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –ª—é–¥—å–º–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —Ä–µ–∫–∏ –∏–ª–∏ –∑–∞–π—Ç–∏ –Ω–∞ –≤—ã—Å—à–∏–π —É—Ä–æ–≤–µ–Ω—å!" +
                " –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏" + 
                " –ù–∞—à–∏ —É—Å–ª—É–≥–∏ –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ–¥ —Å–µ–±—è.")
        elif message.text == "üíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ üíª":
            bot.send_message(message.chat.id, 'ü§ñ –î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω <b>TRAMPOR‚Ñ¢Ô∏è</b>', parse_mode='html')
        else:
            bot.send_message(message.chat.id, '–ü–æ –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ —Å—é–¥–∞ ‚Üí @TRAMPORT')
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == '1':
                bot.send_message(call.message.chat.id, 'üí• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –≤–∏–¥–µ–æ ‚Üí https://www.youtube.com/watch?v=3vTnIVDTjsM')
            elif call.data == '2':
                bot.send_message(call.message.chat.id, 'üí• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –≤–∏–¥–µ–æ ‚Üí https://www.youtube.com/watch?v=g1YO2ZSwjgA')
            elif call.data == '3':
                bot.send_message(call.message.chat.id, 'üí• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –≤–∏–¥–µ–æ ‚Üí https://www.youtube.com/watch?v=jqmfA23jbyM')
            elif call.data == '4':
                bot.send_message(call.message.chat.id, 'üí• –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —ç—Ç–æ –≤–∏–¥–µ–æ ‚Üí https://www.youtube.com/watch?v=0xkt_58cXOA')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! üòò",
                reply_markup=None)
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–ü–∏—à–∏—Ç–µ, –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–∂–µ–º!")
    except Exception as e:
        print(repr(e))
bot.polling(none_stop=True)